/* tslint:disable */
/* eslint-disable */
/**
 * upload-api
 * Upload API
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: hello@upload.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

// @ts-ignore
import { exists, mapValues } from "../runtime";

// @ts-ignore
import type { WithFolderPathPublicPermissionsArray } from "./WithFolderPathPublicPermissionsArray";
// @ts-ignore
import {
  WithFolderPathPublicPermissionsArrayFromJSON,
  WithFolderPathPublicPermissionsArrayToJSON
} from "./WithFolderPathPublicPermissionsArray";
// @ts-ignore
import type { WithFolderPathStorageLayerSummary } from "./WithFolderPathStorageLayerSummary";
// @ts-ignore
import {
  WithFolderPathStorageLayerSummaryFromJSON,
  WithFolderPathStorageLayerSummaryToJSON
} from "./WithFolderPathStorageLayerSummary";

/**
 * The FolderSettings inherited by the current path.
 *
 * If the folder defines its own `settings`, then those will take effect instead of these inherited settings.
 *
 * Each inherited setting contains a `folderPath` field to indicate which folder the setting was inherited from.
 *
 * Note: if the requester has insufficient privileges to read a setting, that setting's value will be `null`.
 * @export
 * @interface FolderSettingsInherited
 */
export interface FolderSettingsInherited {
  /**
   *
   * @type {WithFolderPathPublicPermissionsArray}
   * @memberof FolderSettingsInherited
   */
  publicPermissions: WithFolderPathPublicPermissionsArray | null;
  /**
   *
   * @type {WithFolderPathStorageLayerSummary}
   * @memberof FolderSettingsInherited
   */
  storageLayer: WithFolderPathStorageLayerSummary | null;
}

export function FolderSettingsInheritedFromJSON(json: any): FolderSettingsInherited {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    publicPermissions: WithFolderPathPublicPermissionsArrayFromJSON(json["publicPermissions"]),
    storageLayer: WithFolderPathStorageLayerSummaryFromJSON(json["storageLayer"])
  };
}

export function FolderSettingsInheritedToJSON(value?: FolderSettingsInherited | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    publicPermissions: WithFolderPathPublicPermissionsArrayToJSON(value.publicPermissions),
    storageLayer: WithFolderPathStorageLayerSummaryToJSON(value.storageLayer)
  };
}
