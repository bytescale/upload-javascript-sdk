/* tslint:disable */
/* eslint-disable */
/**
 * upload-api
 * Upload API
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: hello@upload.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

// @ts-ignore
import { exists, mapValues } from "../runtime";

// @ts-ignore
import type { FolderSettingsStorageLayerSummary } from "./FolderSettingsStorageLayerSummary";
// @ts-ignore
import {
  FolderSettingsStorageLayerSummaryFromJSON,
  FolderSettingsStorageLayerSummaryToJSON
} from "./FolderSettingsStorageLayerSummary";
// @ts-ignore
import type { FolderStatus } from "./FolderStatus";
// @ts-ignore
import { FolderStatusFromJSON, FolderStatusToJSON } from "./FolderStatus";

/**
 * Summary information about a folder (a subset of the FolderDetails type).
 * @export
 * @interface FolderSummary
 */
export interface FolderSummary {
  /**
   * Absolute path to a folder. Must begin with a `/`. Should not end with a `/`.
   * @type {string}
   * @memberof FolderSummary
   */
  folderPath: string;
  /**
   *
   * @type {FolderSettingsStorageLayerSummary}
   * @memberof FolderSummary
   */
  settings: FolderSettingsStorageLayerSummary;
  /**
   *
   * @type {FolderStatus}
   * @memberof FolderSummary
   */
  status: FolderStatus;
  /**
   *
   * @type {string}
   * @memberof FolderSummary
   */
  type: FolderSummaryTypeEnum;
}

/**
 * @export
 */
export const FolderSummaryTypeEnum = {
  Folder: "Folder"
} as const;
export type FolderSummaryTypeEnum = typeof FolderSummaryTypeEnum[keyof typeof FolderSummaryTypeEnum];

export function FolderSummaryFromJSON(json: any): FolderSummary {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    folderPath: json["folderPath"],
    settings: FolderSettingsStorageLayerSummaryFromJSON(json["settings"]),
    status: FolderStatusFromJSON(json["status"]),
    type: json["type"]
  };
}

export function FolderSummaryToJSON(value?: FolderSummary | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    folderPath: value.folderPath,
    settings: FolderSettingsStorageLayerSummaryToJSON(value.settings),
    status: FolderStatusToJSON(value.status),
    type: value.type
  };
}
