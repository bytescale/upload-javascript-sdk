/* tslint:disable */
/* eslint-disable */
/**
 * upload-api
 * Upload API
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: hello@upload.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

// @ts-ignore
import { exists, mapValues } from "../runtime";

// @ts-ignore
import type { PatchFolderSettings } from "./PatchFolderSettings";
// @ts-ignore
import { PatchFolderSettingsFromJSON, PatchFolderSettingsToJSON } from "./PatchFolderSettings";

/**
 * Request body for PutFolder.
 * @export
 * @interface PutFolderRequest
 */
export interface PutFolderRequest {
  /**
   * You must specify `true` if the `folderPath` ends with a `/`.
   *
   * This prevents the accidental creation of folders that produce file paths with double forward-slashes in them.
   *
   * Default: false
   * @type {boolean}
   * @memberof PutFolderRequest
   */
  allowUnnamedFolder?: boolean;
  /**
   * Absolute path to a folder. Must begin with a `/`. Should not end with a `/`.
   * @type {string}
   * @memberof PutFolderRequest
   */
  folderPath: string;
  /**
   *
   * @type {PatchFolderSettings}
   * @memberof PutFolderRequest
   */
  folderSettings?: PatchFolderSettings;
}

export function PutFolderRequestFromJSON(json: any): PutFolderRequest {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    allowUnnamedFolder: !exists(json, "allowUnnamedFolder") ? undefined : json["allowUnnamedFolder"],
    folderPath: json["folderPath"],
    folderSettings: !exists(json, "folderSettings") ? undefined : PatchFolderSettingsFromJSON(json["folderSettings"])
  };
}

export function PutFolderRequestToJSON(value?: PutFolderRequest | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    allowUnnamedFolder: value.allowUnnamedFolder,
    folderPath: value.folderPath,
    folderSettings: PatchFolderSettingsToJSON(value.folderSettings)
  };
}
