/* tslint:disable */
/* eslint-disable */
/**
 * upload-api
 * Upload API
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: hello@upload.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

// @ts-ignore
import { exists, mapValues } from "../runtime";

// @ts-ignore
import type { PublicPermissions } from "./PublicPermissions";
// @ts-ignore
import { PublicPermissionsFromJSON, PublicPermissionsToJSON } from "./PublicPermissions";

/**
 * This data type specifies the field must be updated.
 * @export
 * @interface SpecifiedFieldValuePublicPermissionsArrayOrNull
 */
export interface SpecifiedFieldValuePublicPermissionsArrayOrNull {
  /**
   * This field is always `true`.
   * @type {boolean}
   * @memberof SpecifiedFieldValuePublicPermissionsArrayOrNull
   */
  set: SpecifiedFieldValuePublicPermissionsArrayOrNullSetEnum;
  /**
   * The value to set into the field.
   * @type {Array<PublicPermissions>}
   * @memberof SpecifiedFieldValuePublicPermissionsArrayOrNull
   */
  value: Array<PublicPermissions> | null;
}

/**
 * @export
 */
export const SpecifiedFieldValuePublicPermissionsArrayOrNullSetEnum = {
  True: true
} as const;
export type SpecifiedFieldValuePublicPermissionsArrayOrNullSetEnum = typeof SpecifiedFieldValuePublicPermissionsArrayOrNullSetEnum[keyof typeof SpecifiedFieldValuePublicPermissionsArrayOrNullSetEnum];

export function SpecifiedFieldValuePublicPermissionsArrayOrNullFromJSON(
  json: any
): SpecifiedFieldValuePublicPermissionsArrayOrNull {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    set: json["set"],
    value: json["value"] === null ? null : (json["value"] as Array<any>).map(PublicPermissionsFromJSON)
  };
}

export function SpecifiedFieldValuePublicPermissionsArrayOrNullToJSON(
  value?: SpecifiedFieldValuePublicPermissionsArrayOrNull | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    set: value.set,
    value: value.value === null ? null : (value.value as Array<any>).map(PublicPermissionsToJSON)
  };
}
